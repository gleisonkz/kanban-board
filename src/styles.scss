// Custom Theming for Angular Material
@use '~@angular/material' as mat;
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$kanban-board-primary: mat.define-palette(mat.$indigo-palette);
$kanban-board-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$kanban-board-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$kanban-board-theme: mat.define-light-theme(
  (
    color: (
      primary: $kanban-board-primary,
      accent: $kanban-board-accent,
      warn: $kanban-board-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($kanban-board-theme);

@import "colors";
@import "variables";
@import "media";
@import "mixins";

:root {
  --lh: 1.4rem;
  line-height: var(--lh);
  @each $name, $color in $project-colors {
    --color-#{$name}: #{$color};
  }
}

:root.dark-mode {
  @each $name, $color in $project-colors-theme-dark {
    --color-#{$name}: #{$color};
  }
}

@include reset-css;

body {
  background-color: $color-background;
  display: flex;
  justify-content: center;
  font-family: $font-primary;
}

.cdk-drag-animating {
  transition: transform 300ms cubic-bezier(0, 0, 0.2, 1);
}
.cdk-drop-list-dragging .cdk-drag {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.mat-form-field-infix {
  border-top: 0;
}

.mat-form-field {
  height: 23px;
}

.mat-input-element,
.mat-select-value {
  color: $color-text-on-background !important;
}
